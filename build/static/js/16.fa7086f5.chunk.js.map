{"version":3,"sources":["../node_modules/countup.js/dist/countUp.min.js","../node_modules/react-countup/build/index.js","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Farms/components/types.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/Modal/Spacer.tsx","components/Modal/ModalActions.tsx","components/Modal/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/hooks/useUnstakeFarms.ts","views/Farms/hooks/useStakeFarms.ts","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/hooks/useHarvestFarm.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/hooks/useApproveFarm.ts","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/Farms.tsx"],"names":["define","a","n","t","e","i","r","o","s","Math","abs","toFixed","l","decimals","split","length","options","decimal","useGrouping","separator","numerals","replace","prefix","suffix","pow","u","isNaN","this","version","useEasing","easingFn","formattingFn","m","hasOwnProperty","d","c","f","window","requestAnimationFrame","cancelAnimationFrame","Date","getTime","max","setTimeout","clearTimeout","initialize","initialized","error","document","getElementById","startVal","Number","endVal","dec","duration","countDown","frameVal","printValue","tagName","value","textContent","innerHTML","count","startTime","timestamp","remaining","round","rAF","callback","start","pauseResume","paused","reset","update","Object","defineProperty","exports","PropTypes","require","React","warning","CountUp$1","_interopDefaultLegacy","PropTypes__default","React__default","warning__default","CountUp__default","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","obj","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","_isNativeReflectConstruct","result","Super","NewTarget","constructor","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","err","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","slice","name","from","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","createCountUpInstance","el","end","CountUp","_Component","subClass","superClass","create","_inherits","protoProps","staticProps","_super","_this","_len","args","_key","concat","updatedProps","_this$props","redraw","className","children","containerRef","current","HTMLElement","SVGTextElement","SVGTSpanElement","_assertThisInitialize","restart","onPauseResume","_assertThisInitialize2","onReset","_assertThisInitialize3","_this$props2","delay","onEnd","onStart","run","timeoutId","newEnd","_assertThisInitialize4","onUpdate","createRef","_this$props3","createInstance","nextProps","checkProps","prevProps","_this$props4","preserveValue","_this$props5","style","countUpRef","createElement","ref","Component","string","number","func","isRequired","bool","startOnMount","undefined","MOCK_ELEMENT","default","useCountUp","_props","defaultProps","_useState2","useState","setCount","useRef","timerRef","getCountUp","countUp","newCountUp","formattingFnRef","useEffect","Wrapper","styled","div","ExpandableSectionButton","onClick","expanded","useTranslation","role","color","bold","ViewMode","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","infoAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","justifyContent","width","height","href","symbol","Flex","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","token","quoteToken","alignItems","mb","variant","primaryToken","secondaryToken","flexDirection","StyledSpacer","size","Spacer","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","Children","toArray","map","child","StyledTokenInput","input","text","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","onChange","onSelectMax","inputTitle","isBalanceZero","position","isWarning","pl","fontSize","balance","balanceBigNumber","BigNumber","gt","lt","toLocaleString","ROUND_DOWN","displayBalance","pattern","inputMode","step","min","placeholder","scale","mr","external","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","useToast","toastSuccess","toastError","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","valNumber","fullBalanceNumber","handleChange","useCallback","currentTarget","validity","valid","handleSelectMax","handleConfirm","console","title","disabled","isFinite","eq","alignSelf","WithdrawModal","useUnstakeFarms","pid","masterChefContract","useMasterchef","handleUnstake","amount","unstakeFarm","onUnstake","useStakeFarms","handleStake","stakeFarm","txHash","info","onStake","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","location","useLocation","dispatch","useAppDispatch","account","useWeb3React","lpPrice","useLpTokenPrice","fetchFarmUserDataAsync","pids","stakedBalanceBigNumber","getBalanceAmount","useModal","onPresentDeposit","onPresentWithdraw","Balance","getBalanceNumber","times","unit","some","item","pathname","includes","useHarvestFarm","farmPid","onReward","harvestFarm","HarvestAction","earnings","cakePrice","usePriceCakeBusd","rawEarningsBalance","BIG_ZERO","earningsBusd","multipliedBy","toNumber","handleHarvest","useApproveFarm","lpContract","onApprove","approve","address","ethers","constants","MaxUint256","tx","wait","receipt","status","Action","CardActions","farm","requestedApproval","setRequestedApproval","lpAddresses","userData","allowance","allowanceAsString","tokenBalanceAsString","stakedBalanceAsString","earningsAsString","lpAddress","getAddress","isApproved","isGreaterThan","useERC20","handleApprove","textTransform","pr","lpSymbol","mt","ConnectWalletButton","ApyButton","apr","displayApr","ApyCalculatorModal","linkLabel","tokenPrice","linkHref","isFarm","onPresentApyModal","event","stopPropagation","ml","StyledCard","Card","FarmCardInnerContainer","ExpandingWrapper","cardBorder","FarmCard","showExpandableSection","setShowExpandableSection","liquidity","maximumFractionDigits","toUpperCase","earnLabel","dual","BASE_SWAP_URL","isPromotedFarm","isActive","isCommunity","display","CardActionsContainer","getBscScanLink","Container","textSubtle","AprWrapper","Apr","originalValue","hideButton","TokenWrapper","Farm","label","useFarmUser","rawStakedBalance","Amount","span","earned","textDisabled","Earned","userDataReady","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","LiquidityWrapper","Liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","ActionContent","earningsBigNumber","isZero","Staked","marginBottom","marginTop","expandAnimation","keyframes","collapseAnimation","css","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","bsc","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","useDelayedUnmount","toggleActionPanel","isXs","tableSchema","columnNames","column","columnIndex","indexOf","colSpan","card","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","activeIndex","hasStakeInFinishedFarms","as","Link","to","show","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","getDisplayApr","cakeRewardsApr","lpRewardsApr","Farms","path","useRouteMatch","useFarms","farmsLP","userDataLoaded","query","setQuery","usePersistState","localStorageKey","setViewMode","sortOption","setSortOption","chosenFarmsLength","isArchived","isInactive","usePollFarmsData","useUserFarmStakedOnly","stakedOnly","setStakedOnly","activeFarms","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","busdPrice","totalLiquidity","getFarmApr","poolWeight","ChainId","MAINNET","lowercaseQuery","latinise","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","chosenFarmsMemoized","chosenFarms","farms","orderBy","sortFarms","ac","AbortController","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","abort","rowData","tokenAddress","quoteTokenAddress","PageHeader","Page","checked","Select","option","marginLeft","SearchInput","sort","b","exact","renderContent","Loading"],"mappings":"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","file":"static/js/16.fa7086f5.chunk.js","sourcesContent":["!function(a,n){\"function\"==typeof define&&define.amd?define(n):\"object\"==typeof exports?module.exports=n(require,exports,module):a.CountUp=n()}(this,function(a,n,t){var e=function(a,n,t,e,i,r){function o(a){var n,t,e,i,r,o,s=a<0;if(a=Math.abs(a).toFixed(l.decimals),a+=\"\",n=a.split(\".\"),t=n[0],e=n.length>1?l.options.decimal+n[1]:\"\",l.options.useGrouping){for(i=\"\",r=0,o=t.length;r<o;++r)0!==r&&r%3===0&&(i=l.options.separator+i),i=t[o-r-1]+i;t=i}return l.options.numerals.length&&(t=t.replace(/[0-9]/g,function(a){return l.options.numerals[+a]}),e=e.replace(/[0-9]/g,function(a){return l.options.numerals[+a]})),(s?\"-\":\"\")+l.options.prefix+t+e+l.options.suffix}function s(a,n,t,e){return t*(-Math.pow(2,-10*a/e)+1)*1024/1023+n}function u(a){return\"number\"==typeof a&&!isNaN(a)}var l=this;if(l.version=function(){return\"1.9.3\"},l.options={useEasing:!0,useGrouping:!0,separator:\",\",decimal:\".\",easingFn:s,formattingFn:o,prefix:\"\",suffix:\"\",numerals:[]},r&&\"object\"==typeof r)for(var m in l.options)r.hasOwnProperty(m)&&null!==r[m]&&(l.options[m]=r[m]);\"\"===l.options.separator?l.options.useGrouping=!1:l.options.separator=\"\"+l.options.separator;for(var d=0,c=[\"webkit\",\"moz\",\"ms\",\"o\"],f=0;f<c.length&&!window.requestAnimationFrame;++f)window.requestAnimationFrame=window[c[f]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[c[f]+\"CancelAnimationFrame\"]||window[c[f]+\"CancelRequestAnimationFrame\"];window.requestAnimationFrame||(window.requestAnimationFrame=function(a,n){var t=(new Date).getTime(),e=Math.max(0,16-(t-d)),i=window.setTimeout(function(){a(t+e)},e);return d=t+e,i}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)}),l.initialize=function(){return!!l.initialized||(l.error=\"\",l.d=\"string\"==typeof a?document.getElementById(a):a,l.d?(l.startVal=Number(n),l.endVal=Number(t),u(l.startVal)&&u(l.endVal)?(l.decimals=Math.max(0,e||0),l.dec=Math.pow(10,l.decimals),l.duration=1e3*Number(i)||2e3,l.countDown=l.startVal>l.endVal,l.frameVal=l.startVal,l.initialized=!0,!0):(l.error=\"[CountUp] startVal (\"+n+\") or endVal (\"+t+\") is not a number\",!1)):(l.error=\"[CountUp] target is null or undefined\",!1))},l.printValue=function(a){var n=l.options.formattingFn(a);\"INPUT\"===l.d.tagName?this.d.value=n:\"text\"===l.d.tagName||\"tspan\"===l.d.tagName?this.d.textContent=n:this.d.innerHTML=n},l.count=function(a){l.startTime||(l.startTime=a),l.timestamp=a;var n=a-l.startTime;l.remaining=l.duration-n,l.options.useEasing?l.countDown?l.frameVal=l.startVal-l.options.easingFn(n,0,l.startVal-l.endVal,l.duration):l.frameVal=l.options.easingFn(n,l.startVal,l.endVal-l.startVal,l.duration):l.countDown?l.frameVal=l.startVal-(l.startVal-l.endVal)*(n/l.duration):l.frameVal=l.startVal+(l.endVal-l.startVal)*(n/l.duration),l.countDown?l.frameVal=l.frameVal<l.endVal?l.endVal:l.frameVal:l.frameVal=l.frameVal>l.endVal?l.endVal:l.frameVal,l.frameVal=Math.round(l.frameVal*l.dec)/l.dec,l.printValue(l.frameVal),n<l.duration?l.rAF=requestAnimationFrame(l.count):l.callback&&l.callback()},l.start=function(a){l.initialize()&&(l.callback=a,l.rAF=requestAnimationFrame(l.count))},l.pauseResume=function(){l.paused?(l.paused=!1,delete l.startTime,l.duration=l.remaining,l.startVal=l.frameVal,requestAnimationFrame(l.count)):(l.paused=!0,cancelAnimationFrame(l.rAF))},l.reset=function(){l.paused=!1,delete l.startTime,l.initialized=!1,l.initialize()&&(cancelAnimationFrame(l.rAF),l.printValue(l.startVal))},l.update=function(a){if(l.initialize()){if(a=Number(a),!u(a))return void(l.error=\"[CountUp] update() - new endVal is not a number: \"+a);l.error=\"\",a!==l.frameVal&&(cancelAnimationFrame(l.rAF),l.paused=!1,delete l.startTime,l.startVal=l.frameVal,l.endVal=a,l.countDown=l.startVal>l.endVal,l.rAF=requestAnimationFrame(l.count))}},l.initialize()&&l.printValue(l.startVal)};return e});","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar PropTypes = require('prop-types');\nvar React = require('react');\nvar warning = require('warning');\nvar CountUp$1 = require('countup.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar warning__default = /*#__PURE__*/_interopDefaultLegacy(warning);\nvar CountUp__default = /*#__PURE__*/_interopDefaultLegacy(CountUp$1);\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar createCountUpInstance = function createCountUpInstance(el, props) {\n  var decimal = props.decimal,\n      decimals = props.decimals,\n      duration = props.duration,\n      easingFn = props.easingFn,\n      end = props.end,\n      formattingFn = props.formattingFn,\n      prefix = props.prefix,\n      separator = props.separator,\n      start = props.start,\n      suffix = props.suffix,\n      useEasing = props.useEasing;\n  return new CountUp__default['default'](el, start, end, decimals, duration, {\n    decimal: decimal,\n    easingFn: easingFn,\n    formattingFn: formattingFn,\n    separator: separator,\n    prefix: prefix,\n    suffix: suffix,\n    useEasing: useEasing,\n    useGrouping: !!separator\n  });\n};\n\nvar CountUp = /*#__PURE__*/function (_Component) {\n  _inherits(CountUp, _Component);\n\n  var _super = _createSuper(CountUp);\n\n  function CountUp() {\n    var _this;\n\n    _classCallCheck(this, CountUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkProps\", function (updatedProps) {\n      var _this$props = _this.props,\n          start = _this$props.start,\n          suffix = _this$props.suffix,\n          prefix = _this$props.prefix,\n          redraw = _this$props.redraw,\n          duration = _this$props.duration,\n          separator = _this$props.separator,\n          decimals = _this$props.decimals,\n          decimal = _this$props.decimal,\n          className = _this$props.className;\n      var hasPropsChanged = duration !== updatedProps.duration || start !== updatedProps.start || suffix !== updatedProps.suffix || prefix !== updatedProps.prefix || separator !== updatedProps.separator || decimals !== updatedProps.decimals || decimal !== updatedProps.decimal || className !== updatedProps.className;\n      return hasPropsChanged || redraw;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createInstance\", function () {\n      if (typeof _this.props.children === 'function') {\n        // Warn when user didn't use containerRef at all\n        warning__default['default'](_this.containerRef.current && (_this.containerRef.current instanceof HTMLElement || _this.containerRef.current instanceof SVGTextElement || _this.containerRef.current instanceof SVGTSpanElement), \"Couldn't find attached element to hook the CountUp instance into! Try to attach \\\"containerRef\\\" from the render prop to a an HTMLElement, eg. <span ref={containerRef} />.\");\n      }\n\n      return createCountUpInstance(_this.containerRef.current, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pauseResume\", function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          reset = _assertThisInitialize.reset,\n          start = _assertThisInitialize.restart,\n          update = _assertThisInitialize.update;\n\n      var onPauseResume = _this.props.onPauseResume;\n\n      _this.instance.pauseResume();\n\n      onPauseResume({\n        reset: reset,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reset\", function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize2.pauseResume,\n          start = _assertThisInitialize2.restart,\n          update = _assertThisInitialize2.update;\n\n      var onReset = _this.props.onReset;\n\n      _this.instance.reset();\n\n      onReset({\n        pauseResume: pauseResume,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"restart\", function () {\n      _this.reset();\n\n      _this.start();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"start\", function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize3.pauseResume,\n          reset = _assertThisInitialize3.reset,\n          start = _assertThisInitialize3.restart,\n          update = _assertThisInitialize3.update;\n\n      var _this$props2 = _this.props,\n          delay = _this$props2.delay,\n          onEnd = _this$props2.onEnd,\n          onStart = _this$props2.onStart;\n\n      var run = function run() {\n        return _this.instance.start(function () {\n          return onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: start,\n            update: update\n          });\n        });\n      }; // Delay start if delay prop is properly set\n\n\n      if (delay > 0) {\n        _this.timeoutId = setTimeout(run, delay * 1000);\n      } else {\n        run();\n      }\n\n      onStart({\n        pauseResume: pauseResume,\n        reset: reset,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (newEnd) {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize4.pauseResume,\n          reset = _assertThisInitialize4.reset,\n          start = _assertThisInitialize4.restart;\n\n      var onUpdate = _this.props.onUpdate;\n\n      _this.instance.update(newEnd);\n\n      onUpdate({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: start\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", /*#__PURE__*/React__default['default'].createRef());\n\n    return _this;\n  }\n\n  _createClass(CountUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          delay = _this$props3.delay;\n      this.instance = this.createInstance(); // Don't invoke start if component is used as a render prop\n\n      if (typeof children === 'function' && delay !== 0) return; // Otherwise just start immediately\n\n      this.start();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var end = this.props.end;\n      return this.checkProps(nextProps) || end !== nextProps.end;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // If duration, suffix, prefix, separator or start has changed\n      // there's no way to update the values.\n      // So we need to re-create the CountUp instance in order to\n      // restart it.\n      var _this$props4 = this.props,\n          end = _this$props4.end,\n          preserveValue = _this$props4.preserveValue;\n\n      if (this.checkProps(prevProps)) {\n        this.instance.reset();\n        this.instance = this.createInstance();\n        this.start();\n      } // Only end value has changed, so reset and and re-animate with the updated\n      // end value.\n\n\n      if (end !== prevProps.end) {\n        if (!preserveValue) {\n          this.instance.reset();\n        }\n\n        this.instance.update(end);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n      }\n\n      this.instance.reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          style = _this$props5.style;\n      var containerRef = this.containerRef,\n          pauseResume = this.pauseResume,\n          reset = this.reset,\n          restart = this.restart,\n          update = this.update;\n\n      if (typeof children === 'function') {\n        return children({\n          countUpRef: containerRef,\n          pauseResume: pauseResume,\n          reset: reset,\n          start: restart,\n          update: update\n        });\n      }\n\n      return /*#__PURE__*/React__default['default'].createElement(\"span\", {\n        className: className,\n        ref: containerRef,\n        style: style\n      });\n    }\n  }]);\n\n  return CountUp;\n}(React.Component);\n\n_defineProperty(CountUp, \"propTypes\", {\n  decimal: PropTypes__default['default'].string,\n  decimals: PropTypes__default['default'].number,\n  delay: PropTypes__default['default'].number,\n  easingFn: PropTypes__default['default'].func,\n  end: PropTypes__default['default'].number.isRequired,\n  formattingFn: PropTypes__default['default'].func,\n  onEnd: PropTypes__default['default'].func,\n  onStart: PropTypes__default['default'].func,\n  prefix: PropTypes__default['default'].string,\n  redraw: PropTypes__default['default'].bool,\n  separator: PropTypes__default['default'].string,\n  start: PropTypes__default['default'].number,\n  startOnMount: PropTypes__default['default'].bool,\n  suffix: PropTypes__default['default'].string,\n  style: PropTypes__default['default'].object,\n  useEasing: PropTypes__default['default'].bool,\n  preserveValue: PropTypes__default['default'].bool\n});\n\n_defineProperty(CountUp, \"defaultProps\", {\n  decimal: '.',\n  decimals: 0,\n  delay: null,\n  duration: null,\n  easingFn: null,\n  formattingFn: null,\n  onEnd: function onEnd() {},\n  onPauseResume: function onPauseResume() {},\n  onReset: function onReset() {},\n  onStart: function onStart() {},\n  onUpdate: function onUpdate() {},\n  prefix: '',\n  redraw: false,\n  separator: '',\n  start: 0,\n  startOnMount: true,\n  suffix: '',\n  style: undefined,\n  useEasing: true,\n  preserveValue: false\n});\n\n// and just sets the innerHTML of the element.\n\nvar MOCK_ELEMENT = {\n  innerHTML: null\n};\n\nvar useCountUp = function useCountUp(props) {\n  var _props = _objectSpread2(_objectSpread2({}, CountUp.defaultProps), props);\n\n  var start = _props.start,\n      formattingFn = _props.formattingFn;\n\n  var _useState = React.useState(typeof formattingFn === 'function' ? formattingFn(start) : start),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var countUpRef = React.useRef(null);\n  var timerRef = React.useRef(null);\n\n  var createInstance = function createInstance() {\n    var countUp = createCountUpInstance(MOCK_ELEMENT, _props);\n    var formattingFnRef = countUp.options.formattingFn;\n\n    countUp.options.formattingFn = function () {\n      var result = formattingFnRef.apply(void 0, arguments);\n      setCount(result);\n    };\n\n    return countUp;\n  };\n\n  var getCountUp = function getCountUp() {\n    var countUp = countUpRef.current;\n\n    if (countUp !== null) {\n      return countUp;\n    }\n\n    var newCountUp = createInstance();\n    countUpRef.current = newCountUp;\n    return newCountUp;\n  };\n\n  var reset = function reset() {\n    var onReset = _props.onReset;\n    getCountUp().reset();\n    onReset({\n      pauseResume: pauseResume,\n      start: restart,\n      update: update\n    });\n  };\n\n  var restart = function restart() {\n    var onStart = _props.onStart,\n        onEnd = _props.onEnd;\n    getCountUp().reset();\n    getCountUp().start(function () {\n      onEnd({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: restart,\n        update: update\n      });\n    });\n    onStart({\n      pauseResume: pauseResume,\n      reset: reset,\n      update: update\n    });\n  };\n\n  var pauseResume = function pauseResume() {\n    var onPauseResume = _props.onPauseResume;\n    getCountUp().pauseResume();\n    onPauseResume({\n      reset: reset,\n      start: restart,\n      update: update\n    });\n  };\n\n  var update = function update(newEnd) {\n    var onUpdate = _props.onUpdate;\n    getCountUp().update(newEnd);\n    onUpdate({\n      pauseResume: pauseResume,\n      reset: reset,\n      start: restart\n    });\n  };\n\n  React.useEffect(function () {\n    var delay = _props.delay,\n        onStart = _props.onStart,\n        onEnd = _props.onEnd,\n        startOnMount = _props.startOnMount;\n\n    if (startOnMount) {\n      timerRef.current = setTimeout(function () {\n        onStart({\n          pauseResume: pauseResume,\n          reset: reset,\n          update: update\n        });\n        getCountUp().start(function () {\n          clearTimeout(timerRef.current);\n          onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: restart,\n            update: update\n          });\n        });\n      }, delay * 1000);\n    }\n\n    return function () {\n      clearTimeout(timerRef.current);\n      reset();\n    };\n  }, []);\n  return {\n    countUp: count,\n    start: restart,\n    pauseResume: pauseResume,\n    reset: reset,\n    update: update\n  };\n};\n\nexports.default = CountUp;\nexports.useCountUp = useCountUp;\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@sphynxswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: white;\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"white\" bold>\r\n        {expanded ? t('Hide') : t('Details')}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","export type TableProps = {\r\n  data?: TableDataTypes[]\r\n  selectedFilters?: string\r\n  sortBy?: string\r\n  sortDir?: string\r\n  onSort?: (value: string) => void\r\n}\r\n\r\nexport type ColumnsDefTypes = {\r\n  id: number\r\n  label: string\r\n  name: string\r\n  sortable: boolean\r\n}\r\n\r\nexport type ScrollBarProps = {\r\n  ref: string\r\n  width: number\r\n}\r\n\r\nexport type TableDataTypes = {\r\n  POOL: string\r\n  APR: string\r\n  EARNED: string\r\n  STAKED: string\r\n  DETAILS: string\r\n  LINKS: string\r\n}\r\n\r\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'liquidity',\r\n    sortable: true,\r\n    label: 'Liquidity',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'multiplier',\r\n    sortable: true,\r\n    label: 'Multiplier',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, LinkExternal, Skeleton } from '@sphynxswap/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  bscScanAddress?: string\r\n  infoAddress?: string\r\n  removed?: boolean\r\n  totalValueFormatted?: string\r\n  lpLabel?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  font-weight: 400;\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  bscScanAddress,\r\n  infoAddress,\r\n  removed,\r\n  totalValueFormatted,\r\n  lpLabel,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Total Liquidity')}:</Text>\r\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\r\n      </Flex>\r\n      {!removed && (\r\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\r\n      )}\r\n      <StyledLinkExternal href={bscScanAddress}>{t('View Contract')}</StyledLinkExternal>\r\n      <StyledLinkExternal href={infoAddress}>{t('See Pair Info')}</StyledLinkExternal>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading } from '@sphynxswap/uikit'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\nimport { Token } from 'config/constants/types'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  token: Token\r\n  quoteToken: Token\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier, isCommunityFarm, token, quoteToken }) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\" style={{ color: '#F3841E' }}>\r\n          {lpLabel.split(' ')[0]}\r\n        </Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Spacer from './Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, Input, InputProps, Flex, Link } from '@sphynxswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BigNumber } from 'bignumber.js'\r\n\r\ninterface ModalInputProps {\r\n  max: string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  value: string\r\n  addLiquidityUrl?: string\r\n  inputTitle?: string\r\n  decimals?: number\r\n}\r\n\r\nconst StyledTokenInput = styled.div<InputProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  padding: 8px 16px 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  box-shadow: none;\r\n  width: 60px;\r\n  margin: 0 8px;\r\n  padding: 0 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: 80px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst StyledErrorMessage = styled(Text)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  a {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nconst ModalInput: React.FC<ModalInputProps> = ({\r\n  max,\r\n  symbol,\r\n  onChange,\r\n  onSelectMax,\r\n  value,\r\n  addLiquidityUrl,\r\n  inputTitle,\r\n  decimals = 18,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const isBalanceZero = max === '0' || !max\r\n\r\n  const displayBalance = (balance: string) => {\r\n    if (isBalanceZero) {\r\n      return '0'\r\n    }\r\n    const balanceBigNumber = new BigNumber(balance)\r\n    if (balanceBigNumber.gt(0) && balanceBigNumber.lt(0.0001)) {\r\n      return balanceBigNumber.toLocaleString()\r\n    }\r\n    return balanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <StyledTokenInput isWarning={isBalanceZero}>\r\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\r\n          <Text fontSize=\"14px\">{inputTitle}</Text>\r\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\r\n        </Flex>\r\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\r\n          <StyledInput\r\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\r\n            inputMode=\"decimal\"\r\n            step=\"any\"\r\n            min=\"0\"\r\n            onChange={onChange}\r\n            placeholder=\"0\"\r\n            value={value}\r\n          />\r\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n            {t('Max')}\r\n          </Button>\r\n          <Text fontSize=\"16px\">{symbol}</Text>\r\n        </Flex>\r\n      </StyledTokenInput>\r\n      {isBalanceZero && (\r\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\r\n          {t('No tokens to stake')}:{' '}\r\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\r\n            {t('Get %symbol%', { symbol })}\r\n          </Link>\r\n        </StyledErrorMessage>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal, LinkExternal } from '@sphynxswap/uikit'\r\nimport { ModalActions, ModalInput } from 'components/Modal'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\r\n  const [val, setVal] = useState('')\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  const handleConfirm = useCallback(async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onConfirm(val)\r\n      toastSuccess(t('Staked!'), t('Your funds have been staked in the farm'))\r\n      onDismiss()\r\n    } catch (e) {\r\n      toastError(\r\n        t('Error'),\r\n        t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n      )\r\n      console.error(e)\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }, [onConfirm, onDismiss, t, toastError, toastSuccess, val])\r\n\r\n  return (\r\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        inputTitle={t('Stake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={handleConfirm}\r\n        >\r\n          {pendingTx ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\r\n        {t('Get %symbol%', { symbol: tokenName })}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@sphynxswap/uikit'\r\nimport { ModalActions, ModalInput } from 'components/Modal'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  const handleConfirm = useCallback(async() => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onConfirm(val)\r\n      toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n      onDismiss()\r\n    } catch (e) {\r\n      toastError(\r\n        t('Error'),\r\n        t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n      )\r\n      console.error(e)\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }, [onConfirm, onDismiss, t, toastError, toastSuccess, val])\r\n\r\n  return (\r\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={t('Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={handleConfirm}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import { useCallback } from 'react'\r\nimport { unstakeFarm } from 'utils/calls'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\nconst useUnstakeFarms = (pid: number) => {\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      await unstakeFarm(masterChefContract, pid, amount)\r\n    },\r\n    [masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstakeFarms\r\n","import { useCallback } from 'react'\r\nimport { stakeFarm } from 'utils/calls'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\nconst useStakeFarms = (pid: number) => {\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stakeFarm(masterChefContract, pid, amount)\r\n      console.info(txHash)\r\n    },\r\n    [masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStakeFarms\r\n","import React, { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@sphynxswap/uikit'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { useLpTokenPrice } from 'state/farms/hooks'\r\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\nimport useUnstakeFarms from '../../hooks/useUnstakeFarms'\r\nimport useStakeFarms from '../../hooks/useStakeFarms'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { onStake } = useStakeFarms(pid)\r\n  const { onUnstake } = useUnstakeFarms(pid)\r\n  const location = useLocation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const lpPrice = useLpTokenPrice(tokenName)\r\n\r\n  const handleStake = async (amount: string) => {\r\n    await onStake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const handleUnstake = async (amount: string) => {\r\n    await onUnstake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const displayBalance = useCallback(() => {\r\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\r\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\r\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\r\n    }\r\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\r\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\r\n    }\r\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }, [stakedBalance])\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return stakedBalance.eq(0) ? (\r\n      <Button\r\n        onClick={onPresentDeposit}\r\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n      >\r\n        {t('Stake LP')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n        <IconButton\r\n          variant=\"tertiary\"\r\n          onClick={onPresentDeposit}\r\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n        >\r\n          <AddIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\r\n        <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\r\n        {stakedBalance.gt(0) && lpPrice.gt(0) && (\r\n          <Balance\r\n            fontSize=\"12px\"\r\n            color=\"textSubtle\"\r\n            decimals={2}\r\n            value={getBalanceNumber(lpPrice.times(stakedBalance))}\r\n            unit=\" USD\"\r\n            prefix=\"~\"\r\n          />\r\n        )}\r\n      </Flex>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import { useCallback } from 'react'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\nconst useHarvestFarm = (farmPid: number) => {\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    await harvestFarm(masterChefContract, farmPid)\r\n  }, [farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport default useHarvestFarm\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@sphynxswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport useToast from 'hooks/useToast'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport Balance from 'components/Balance'\r\nimport useHarvestFarm from '../../hooks/useHarvestFarm'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvestFarm(pid)\r\n  const cakePrice = usePriceCakeBusd()\r\n  const dispatch = useAppDispatch()\r\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\r\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\r\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\r\n\r\n  const handleHarvest = async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onReward()\r\n      toastSuccess(\r\n        `${t('Harvested')}!`,\r\n        t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'SPHYNX' }),\r\n      )\r\n    } catch (e) {\r\n      toastError(\r\n        t('Error'),\r\n        t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n      )\r\n      console.error(e)\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\r\n        <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {earningsBusd > 0 && (\r\n          <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\r\n        )}\r\n      </Flex>\r\n      <Button\r\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\r\n        onClick={handleHarvest}\r\n      >\r\n        {t('Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import { useCallback } from 'react'\r\nimport { ethers, Contract } from 'ethers'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\nconst useApproveFarm = (lpContract: Contract) => {\r\n  const masterChefContract = useMasterchef()\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await lpContract.approve(masterChefContract.address, ethers.constants.MaxUint256)\r\n      const receipt = await tx.wait()\r\n      return receipt.status\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\nexport default useApproveFarm\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text } from '@sphynxswap/uikit'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\nimport useApproveFarm from '../../hooks/useApproveFarm'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\r\n  const { t } = useTranslation()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses } = farm\r\n  const {\r\n    allowance: allowanceAsString = 0,\r\n    tokenBalance: tokenBalanceAsString = 0,\r\n    stakedBalance: stakedBalanceAsString = 0,\r\n    earnings: earningsAsString = 0,\r\n  } = farm.userData || {}\r\n  const allowance = new BigNumber(allowanceAsString)\r\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\r\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\r\n  const earnings = new BigNumber(earningsAsString)\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const lpContract = useERC20(lpAddress)\r\n\r\n  const { onApprove } = useApproveFarm(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={farm.lpSymbol}\r\n        pid={pid}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n    ) : (\r\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n        {t('Enable Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n          Sphynx\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n          {farm.lpSymbol}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { IconButton, useModal, CalculateIcon } from '@sphynxswap/uikit'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apr?: number\r\n  displayApr?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apr, displayApr, addLiquidityUrl }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\r\n      tokenPrice={cakePrice.toNumber()}\r\n      apr={apr}\r\n      displayApr={displayApr}\r\n      linkHref={addLiquidityUrl}\r\n      isFarm\r\n    />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n      <CalculateIcon width=\"18px\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Card, Flex, Text, Skeleton } from '@sphynxswap/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { BASE_SWAP_URL } from 'config'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n  lpRewardsApr?: number\r\n  liquidity?: BigNumber\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  align-self: baseline;\r\n`\r\n\r\nconst FarmCardInnerContainer = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n`\r\n\r\nconst ExpandingWrapper = styled.div`\r\n  padding: 24px;\r\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n  overflow: hidden;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  displayApr: string\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  const totalValueFormatted =\r\n    farm.liquidity && farm.liquidity.gt(0)\r\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : ''\r\n\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('Sphynx + Fees')\r\n  const addLiquidityUrl = `${BASE_SWAP_URL}`\r\n  const lpAddress = getAddress(farm.lpAddresses)\r\n  const isPromotedFarm = farm.token.symbol === 'SPHYNX'\r\n\r\n  return (\r\n    <StyledCard isActive={isPromotedFarm}>\r\n      <FarmCardInnerContainer>\r\n        <CardHeading\r\n          lpLabel={lpLabel}\r\n          multiplier={farm.multiplier}\r\n          isCommunityFarm={farm.isCommunity}\r\n          token={farm.token}\r\n          quoteToken={farm.quoteToken}\r\n        />\r\n        {!removed && (\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Text>{t('APR')}:</Text>\r\n            <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n              {farm.apr ? (\r\n                <>\r\n                  <ApyButton\r\n                    lpLabel={lpLabel}\r\n                    addLiquidityUrl={addLiquidityUrl}\r\n                    cakePrice={cakePrice}\r\n                    apr={farm.apr}\r\n                    displayApr={displayApr}\r\n                  />\r\n                  {displayApr}%\r\n                </>\r\n              ) : (\r\n                <Skeleton height={24} width={80} />\r\n              )}\r\n            </Text>\r\n          </Flex>\r\n        )}\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{t('Earn')}:</Text>\r\n          <Text bold>{earnLabel}</Text>\r\n        </Flex>\r\n        <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\r\n      </FarmCardInnerContainer>\r\n\r\n      <ExpandingWrapper>\r\n        <ExpandableSectionButton\r\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n          expanded={showExpandableSection}\r\n        />\r\n        {showExpandableSection && (\r\n          <DetailsSection\r\n            removed={removed}\r\n            bscScanAddress={getBscScanLink(lpAddress, 'address')}\r\n            infoAddress={`#/pool/${lpAddress}`}\r\n            totalValueFormatted={totalValueFormatted}\r\n            lpLabel={lpLabel}\r\n            addLiquidityUrl={addLiquidityUrl}\r\n          />\r\n        )}\r\n      </ExpandingWrapper>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\r\nimport { Address } from 'config/constants/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BASE_SWAP_URL } from 'config'\r\nimport { Skeleton } from '@sphynxswap/uikit'\r\n\r\nexport interface AprProps {\r\n  value: string\r\n  multiplier: string\r\n  lpLabel: string\r\n  tokenAddress?: Address\r\n  quoteTokenAddress?: Address\r\n  cakePrice: BigNumber\r\n  originalValue: number\r\n  hideButton?: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n\r\n  button {\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    svg {\r\n      path {\r\n        fill: ${({ theme }) => theme.colors.textSubtle};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst AprWrapper = styled.div`\r\n  min-width: 60px;\r\n  text-align: left;\r\n`\r\n\r\nconst Apr: React.FC<AprProps> = ({\r\n  value,\r\n  lpLabel,\r\n  cakePrice,\r\n  originalValue,\r\n  hideButton = false,\r\n}) => {\r\n  const addLiquidityUrl = `${BASE_SWAP_URL}`\r\n\r\n  return originalValue !== 0 ? (\r\n    <Container>\r\n      {originalValue ? (\r\n        <>\r\n          <AprWrapper>{value}%</AprWrapper>\r\n          {!hideButton && (\r\n            <ApyButton\r\n              lpLabel={lpLabel}\r\n              cakePrice={cakePrice}\r\n              apr={originalValue}\r\n              displayApr={value}\r\n              addLiquidityUrl={addLiquidityUrl}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <AprWrapper>\r\n          <Skeleton width={60} />\r\n        </AprWrapper>\r\n      )}\r\n    </Container>\r\n  ) : (\r\n    <Container>\r\n      <AprWrapper>{originalValue}%</AprWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/farms/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text } from '@sphynxswap/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Token } from 'config/constants/types'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\n\r\nexport interface FarmProps {\r\n  label: string\r\n  pid: number\r\n  token: Token\r\n  quoteToken: Token\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding-left: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst TokenWrapper = styled.div`\r\n  padding-right: 8px;\r\n  width: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 40px;\r\n  }\r\n`\r\n\r\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid }) => {\r\n  const { stakedBalance } = useFarmUser(pid)\r\n  const { t } = useTranslation()\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n\r\n  const handleRenderFarming = (): JSX.Element => {\r\n    if (rawStakedBalance) {\r\n      return (\r\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\r\n          {t('Farming')}\r\n        </Text>\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <TokenWrapper>\r\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\r\n      </TokenWrapper>\r\n      <div>\r\n        {handleRenderFarming()}\r\n        <Text bold>{label}</Text>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Farm\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton } from '@sphynxswap/uikit'\r\n\r\nexport interface EarnedProps {\r\n  earnings: number\r\n  pid: number\r\n}\r\n\r\ninterface EarnedPropsWithLoading extends EarnedProps {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst Amount = styled.span<{ earned: number }>`\r\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\r\n  if (userDataReady) {\r\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\r\n  }\r\n  return (\r\n    <Amount earned={0}>\r\n      <Skeleton width={60} />\r\n    </Amount>\r\n  )\r\n}\r\n\r\nexport default Earned\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, useMatchBreakpoints } from '@sphynxswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface DetailsProps {\r\n  actionPanelToggled: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding-right: 8px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 0px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 20px;\r\n`\r\n\r\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\r\n  const { t } = useTranslation()\r\n  const { isXl } = useMatchBreakpoints()\r\n  const isMobile = !isXl\r\n\r\n  return (\r\n    <Container>\r\n      {!isMobile && t('Details')}\r\n      <ArrowIcon color=\"white\" toggled={actionPanelToggled} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Skeleton, useTooltip } from '@sphynxswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface MultiplierProps {\r\n  multiplier: string\r\n}\r\n\r\nconst MultiplierWrapper = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  width: 36px;\r\n  text-align: right;\r\n  margin-right: 14px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    text-align: left;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\r\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\r\n  const { t } = useTranslation()\r\n  const tooltipContent = (\r\n    <>\r\n      {t('The multiplier represents the amount of SPHYNX rewards each farm gets.')}\r\n      <br />\r\n      <br />\r\n      {t('For example, if a 1x farm was getting 1 SPHYNX per block, a 40x farm would be getting 40 SPHYNX per block.')}\r\n    </>\r\n  )\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\r\n    placement: 'top-end',\r\n    tooltipOffset: [20, 10],\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\r\n      <ReferenceElement ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </ReferenceElement>\r\n      {tooltipVisible && tooltip}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Multiplier\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@sphynxswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface LiquidityProps {\r\n  liquidity: BigNumber\r\n}\r\n\r\nconst LiquidityWrapper = styled.div`\r\n  min-width: 110px;\r\n  font-weight: 600;\r\n  text-align: right;\r\n  margin-right: 14px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    text-align: left;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\r\n  const displayLiquidity =\r\n    liquidity && liquidity.gt(0) ? (\r\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    ) : (\r\n      <Skeleton width={60} />\r\n    )\r\n  const { t } = useTranslation()\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Total value of the funds in this farm’s liquidity pool'),\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <LiquidityWrapper>\r\n        <Text>{displayLiquidity}</Text>\r\n      </LiquidityWrapper>\r\n      <ReferenceElement ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </ReferenceElement>\r\n      {tooltipVisible && tooltip}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Liquidity\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 48px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  display: flex;\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n","import React, { useState } from 'react'\r\nimport { Button, Heading, Skeleton, Text } from '@sphynxswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport Balance from 'components/Balance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useHarvestFarm from '../../../hooks/useHarvestFarm'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\n\r\ninterface HarvestActionProps extends FarmWithStakedValue {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\r\n  const { toastSuccess, toastError } = useToast()\r\n  const earningsBigNumber = new BigNumber(userData.earnings)\r\n  const cakePrice = usePriceCakeBusd()\r\n  let earnings = BIG_ZERO\r\n  let earningsBusd = 0\r\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\r\n\r\n  // If user didn't connect wallet default balance will be 0\r\n  if (!earningsBigNumber.isZero()) {\r\n    earnings = getBalanceAmount(earningsBigNumber)\r\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\r\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }\r\n\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvestFarm(pid)\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n\r\n  const handleHarvest = async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onReward()\r\n      toastSuccess(\r\n        `${t('Harvested')}!`,\r\n        t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\r\n      )\r\n    } catch (e) {\r\n      toastError(\r\n        t('Error'),\r\n        t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n      )\r\n      console.error(e)\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n          SPHYNX\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Earned')}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <div>\r\n          <Heading>{displayBalance}</Heading>\r\n          {earningsBusd > 0 && (\r\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\r\n          )}\r\n        </div>\r\n        <Button\r\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\r\n          onClick={handleHarvest}\r\n          ml=\"4px\"\r\n        >\r\n          {t('Harvest')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text, Heading } from '@sphynxswap/uikit'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport Balance from 'components/Balance'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useFarmUser, useLpTokenPrice } from 'state/farms/hooks'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { BASE_SWAP_URL } from 'config'\r\nimport { useAppDispatch } from 'state'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\r\nimport DepositModal from '../../DepositModal'\r\nimport WithdrawModal from '../../WithdrawModal'\r\nimport useStakeFarms from '../../../hooks/useStakeFarms'\r\nimport useApproveFarm from '../../../hooks/useApproveFarm'\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps extends FarmWithStakedValue {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\r\n  pid,\r\n  lpSymbol,\r\n  lpAddresses,\r\n  userDataReady,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\r\n  const { onStake } = useStakeFarms(pid)\r\n  const { onUnstake } = useUnstakeFarms(pid)\r\n  const location = useLocation()\r\n  const lpPrice = useLpTokenPrice(lpSymbol)\r\n\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const addLiquidityUrl = `${BASE_SWAP_URL}`\r\n\r\n  const handleStake = async (amount: string) => {\r\n    await onStake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const handleUnstake = async (amount: string) => {\r\n    await onUnstake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const displayBalance = useCallback(() => {\r\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\r\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\r\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\r\n    }\r\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\r\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\r\n    }\r\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }, [stakedBalance])\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\r\n  )\r\n  const lpContract = useERC20(lpAddress)\r\n  const dispatch = useAppDispatch()\r\n  const { onApprove } = useApproveFarm(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n            {t('Start Farming')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <ConnectWalletButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (isApproved) {\r\n    if (stakedBalance.gt(0)) {\r\n      return (\r\n        <ActionContainer>\r\n          <ActionTitles>\r\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n              {lpSymbol}\r\n            </Text>\r\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n              {t('Staked')}\r\n            </Text>\r\n          </ActionTitles>\r\n          <ActionContent>\r\n            <div>\r\n              <Heading>{displayBalance()}</Heading>\r\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\r\n                  unit=\" USD\"\r\n                  prefix=\"~\"\r\n                />\r\n              )}\r\n            </div>\r\n            <IconButtonWrapper>\r\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n                <MinusIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={onPresentDeposit}\r\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            </IconButtonWrapper>\r\n          </ActionContent>\r\n        </ActionContainer>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\r\n            {t('Stake').toUpperCase()}\r\n          </Text>\r\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\r\n            {lpSymbol}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button\r\n            width=\"100%\"\r\n            onClick={onPresentDeposit}\r\n            variant=\"secondary\"\r\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n          >\r\n            {t('Stake LP')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataReady) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n            {t('Start Farming')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Enable Farm')}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n          {t('Enable')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport styled, { css, keyframes } from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { LinkExternal, Text } from '@sphynxswap/uikit'\r\nimport { BASE_SWAP_URL } from 'config'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getBscScanLink } from 'utils'\r\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\r\n\r\nimport HarvestAction from './HarvestAction'\r\nimport StakedAction from './StakedAction'\r\nimport Apr, { AprProps } from '../Apr'\r\nimport Multiplier, { MultiplierProps } from '../Multiplier'\r\nimport Liquidity, { LiquidityProps } from '../Liquidity'\r\n\r\nexport interface ActionPanelProps {\r\n  apr: AprProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n  userDataReady: boolean\r\n  expanded: boolean\r\n}\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 500px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 500px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ expanded }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column-reverse;\r\n  padding: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  font-weight: 400;\r\n`\r\n\r\nconst StakeContainer = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n  }\r\n`\r\n\r\nconst TagsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 25px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 16px;\r\n  }\r\n\r\n  > div {\r\n    height: 24px;\r\n    padding: 0 6px;\r\n    font-size: 14px;\r\n    margin-right: 4px;\r\n\r\n    svg {\r\n      width: 14px;\r\n    }\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\n  min-width: 200px;\r\n`\r\n\r\nconst ValueContainer = styled.div`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst ValueWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 4px 0px;\r\n`\r\n\r\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\r\n  details,\r\n  apr,\r\n  multiplier,\r\n  liquidity,\r\n  userDataReady,\r\n  expanded,\r\n}) => {\r\n  const farm = details\r\n\r\n  const { t } = useTranslation()\r\n  const isActive = farm.multiplier !== '0X'\r\n  const { dual } = farm\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const lpAddress = getAddress(farm.lpAddresses)\r\n  const bsc = getBscScanLink(lpAddress, 'address')\r\n  const info = `${BASE_SWAP_URL}/pool/${lpAddress}`\r\n  const addLiquidityUrl = `${BASE_SWAP_URL}`\r\n\r\n  return (\r\n    <Container expanded={expanded}>\r\n      <InfoContainer>\r\n        {isActive && (\r\n          <StakeContainer>\r\n            <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\r\n          </StakeContainer>\r\n        )}\r\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\r\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\r\n        <TagsContainer>\r\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\r\n          {dual ? <DualTag /> : null}\r\n        </TagsContainer>\r\n      </InfoContainer>\r\n      <ValueContainer>\r\n        <ValueWrapper>\r\n          <Text>{t('APR')}</Text>\r\n          <Apr {...apr} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('Multiplier')}</Text>\r\n          <Multiplier {...multiplier} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('Liquidity')}</Text>\r\n          <Liquidity {...liquidity} />\r\n        </ValueWrapper>\r\n      </ValueContainer>\r\n      <ActionContainer>\r\n        <HarvestAction {...farm} userDataReady={userDataReady} />\r\n        <StakedAction {...farm} userDataReady={userDataReady} />\r\n      </ActionContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Label = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  text-align: left;\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  min-height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\ninterface CellLayoutProps {\r\n  label?: string\r\n}\r\n\r\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\r\n  return (\r\n    <div>\r\n      {label && <Label>{label}</Label>}\r\n      <ContentContainer>{children}</ContentContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CellLayout\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useMatchBreakpoints } from '@sphynxswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport { useFarmUser } from 'state/farms/hooks'\r\n\r\nimport Apr, { AprProps } from './Apr'\r\nimport Farm, { FarmProps } from './Farm'\r\nimport Earned, { EarnedProps } from './Earned'\r\nimport Details from './Details'\r\nimport Multiplier, { MultiplierProps } from './Multiplier'\r\nimport Liquidity, { LiquidityProps } from './Liquidity'\r\nimport ActionPanel from './Actions/ActionPanel'\r\nimport CellLayout from './CellLayout'\r\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\r\n\r\nexport interface RowProps {\r\n  apr: AprProps\r\n  farm: FarmProps\r\n  earned: EarnedProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n}\r\n\r\ninterface RowPropsWithLoading extends RowProps {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst cells = {\r\n  apr: Apr,\r\n  farm: Farm,\r\n  earned: Earned,\r\n  details: Details,\r\n  multiplier: Multiplier,\r\n  liquidity: Liquidity,\r\n}\r\n\r\nconst CellInner = styled.div`\r\n  padding: 24px 0px;\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding-right: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst StyledTr = styled.tr`\r\n  cursor: pointer;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst EarnedMobileCell = styled.td`\r\n  padding: 16px 0 24px 16px;\r\n`\r\n\r\nconst AprMobileCell = styled.td`\r\n  padding-top: 16px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst FarmMobileCell = styled.td`\r\n  padding-top: 24px;\r\n`\r\n\r\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\r\n  const { details, userDataReady } = props\r\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\r\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\r\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\r\n  const { t } = useTranslation()\r\n\r\n  const toggleActionPanel = () => {\r\n    setActionPanelExpanded(!actionPanelExpanded)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setActionPanelExpanded(hasStakedAmount)\r\n  }, [hasStakedAmount])\r\n\r\n  const { isXl, isXs } = useMatchBreakpoints()\r\n\r\n  const isMobile = !isXl\r\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\r\n  const columnNames = tableSchema.map((column) => column.name)\r\n\r\n  const handleRenderRow = () => {\r\n    if (!isXs) {\r\n      return (\r\n        <StyledTr onClick={toggleActionPanel}>\r\n          {Object.keys(props).map((key) => {\r\n            const columnIndex = columnNames.indexOf(key)\r\n            if (columnIndex === -1) {\r\n              return null\r\n            }\r\n\r\n            switch (key) {\r\n              case 'details':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout>\r\n                        <Details actionPanelToggled={actionPanelExpanded} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              case 'apr':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t('APR')}>\r\n                        <Apr {...props.apr} hideButton={isMobile} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              default:\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\r\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n            }\r\n          })}\r\n        </StyledTr>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <StyledTr onClick={toggleActionPanel}>\r\n        <td>\r\n          <tr>\r\n            <FarmMobileCell>\r\n              <CellLayout>\r\n                <Farm {...props.farm} />\r\n              </CellLayout>\r\n            </FarmMobileCell>\r\n          </tr>\r\n          <tr>\r\n            <EarnedMobileCell>\r\n              <CellLayout label={t('Earned')}>\r\n                <Earned {...props.earned} userDataReady={userDataReady} />\r\n              </CellLayout>\r\n            </EarnedMobileCell>\r\n            <AprMobileCell>\r\n              <CellLayout label={t('APR')}>\r\n                <Apr {...props.apr} hideButton />\r\n              </CellLayout>\r\n            </AprMobileCell>\r\n          </tr>\r\n        </td>\r\n        <td>\r\n          <CellInner>\r\n            <CellLayout>\r\n              <Details actionPanelToggled={actionPanelExpanded} />\r\n            </CellLayout>\r\n          </CellInner>\r\n        </td>\r\n      </StyledTr>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {handleRenderRow()}\r\n      {shouldRenderChild && (\r\n        <tr>\r\n          <td colSpan={6}>\r\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@sphynxswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport Row, { RowProps } from './Row'\r\n\r\nexport interface ITableProps {\r\n  data: RowProps[]\r\n  columns: ColumnType<RowProps>[]\r\n  userDataReady: boolean\r\n  sortColumn?: string\r\n}\r\n\r\nconst Container = styled.div`\r\n  filter: ${({ theme }) => theme.card.dropShadow};\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  margin: 16px 0px;\r\n`\r\n\r\nconst TableWrapper = styled.div`\r\n  overflow: visible;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StyledTable = styled.table`\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n`\r\n\r\nconst TableBody = styled.tbody`\r\n  & tr {\r\n    td {\r\n      font-size: 16px;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n`\r\n\r\nconst TableContainer = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst FarmTable: React.FC<ITableProps> = (props) => {\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const { t } = useTranslation()\r\n  const { data, columns, userDataReady } = props\r\n\r\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\r\n\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <TableContainer>\r\n        <TableWrapper ref={tableWrapperEl}>\r\n          <StyledTable>\r\n            <TableBody>\r\n              {rows.map((row) => {\r\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\r\n              })}\r\n            </TableBody>\r\n          </StyledTable>\r\n        </TableWrapper>\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" color=\"white\" onClick={scrollToTop} style={{ color: 'white' }}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"white\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </TableContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FarmTable\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useLocation, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@sphynxswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface FarmTabButtonsProps {\r\n  hasStakeInFinishedFarms: boolean\r\n}\r\n\r\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n\r\n  let activeIndex\r\n  switch (location.pathname) {\r\n    case '/farms':\r\n      activeIndex = 0\r\n      break\r\n    case '/farms/history':\r\n      activeIndex = 1\r\n      break\r\n    case '/farms/archived':\r\n      activeIndex = 2\r\n      break\r\n    default:\r\n      activeIndex = 0\r\n      break\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to=\"/farms\">\r\n          {t('Live')}\r\n        </ButtonMenuItem>\r\n        <NotificationDot show={hasStakeInFinishedFarms}>\r\n          <ButtonMenuItem as={Link} to=\"/farms/history\">\r\n            {t('Finished')}\r\n          </ButtonMenuItem>\r\n        </NotificationDot>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  a {\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@sphynxswap/uikit'\r\nimport { ViewMode } from '../types'\r\n\r\ninterface ToggleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, RowType, Toggle, Text, Flex } from '@sphynxswap/uikit'\r\nimport { ChainId } from '@sphynxswap/sdk'\r\nimport styled from 'styled-components'\r\nimport FlexLayout from 'components/Layout/Flex'\r\nimport Page from 'components/Layout/Page'\r\nimport { useFarms, usePollFarmsData, usePriceCakeBusd } from 'state/farms/hooks'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport { orderBy } from 'lodash'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport { latinise } from 'utils/latinise'\r\nimport { useUserFarmStakedOnly } from 'state/user/hooks'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport Loading from 'components/Loading'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport Table from './components/FarmTable/FarmTable'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport { RowProps } from './components/FarmTable/Row'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema, ViewMode } from './components/types'\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n\r\n  & > div {\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst NUMBER_OF_FARMS_VISIBLE = 12\r\n\r\nconst getDisplayApr = (cakeRewardsApr?: number, lpRewardsApr?: number) => {\r\n  if (cakeRewardsApr && lpRewardsApr) {\r\n    return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  }\r\n  if (cakeRewardsApr) {\r\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  }\r\n  return null\r\n}\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const { t } = useTranslation()\r\n  const { data: farmsLP, userDataLoaded } = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const [query, setQuery] = useState('')\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\r\n  const { account } = useWeb3React()\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const chosenFarmsLength = useRef(0)\r\n\r\n  const isArchived = pathname.includes('archived')\r\n  const isInactive = pathname.includes('history')\r\n  const isActive = !isInactive && !isArchived\r\n\r\n  usePollFarmsData(isArchived)\r\n\r\n  // Users with no wallet connected should see 0 as Earned amount\r\n  // Connected users should see loading indicator until first userData has loaded\r\n  const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\r\n\r\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\r\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\r\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedInactiveFarms = inactiveFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedArchivedFarms = archivedFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\r\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\r\n          return farm\r\n        }\r\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\r\n        const { cakeRewardsApr, lpRewardsApr } = isActive\r\n          ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\r\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\r\n\r\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = latinise(query.toLowerCase())\r\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\r\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPR\r\n    },\r\n    [cakePrice, query, isActive],\r\n  )\r\n\r\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n\r\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n\r\n  const chosenFarmsMemoized = useMemo(() => {\r\n    let chosenFarms = []\r\n\r\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\r\n      switch (sortOption) {\r\n        case 'apr':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\r\n        case 'multiplier':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\r\n            'desc',\r\n          )\r\n        case 'earned':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\r\n            'desc',\r\n          )\r\n        case 'liquidity':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\r\n        default:\r\n          return farms\r\n      }\r\n    }\r\n\r\n    if (isActive) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\r\n    }\r\n    if (isInactive) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\r\n    }\r\n    if (isArchived) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\r\n    }\r\n\r\n    return sortFarms(chosenFarms).slice(0, numberOfFarmsVisible)\r\n  }, [\r\n    sortOption,\r\n    activeFarms,\r\n    farmsList,\r\n    inactiveFarms,\r\n    archivedFarms,\r\n    isActive,\r\n    isInactive,\r\n    isArchived,\r\n    stakedArchivedFarms,\r\n    stakedInactiveFarms,\r\n    stakedOnly,\r\n    stakedOnlyFarms,\r\n    numberOfFarmsVisible,\r\n  ])\r\n\r\n  chosenFarmsLength.current = chosenFarmsMemoized.length\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    const showMoreFarms = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\r\n          if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\r\n            return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\r\n          }\r\n          return farmsCurrentlyVisible\r\n        })\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n\r\n    return () => ac.abort();\r\n  }, [chosenFarmsMemoized, observerIsSet])\r\n\r\n  const rowData = chosenFarmsMemoized.map((farm) => {\r\n    const { token, quoteToken } = farm\r\n    const tokenAddress = token.address\r\n    const quoteTokenAddress = quoteToken.address\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\r\n\r\n    const row: RowProps = {\r\n      apr: {\r\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\r\n        multiplier: farm.multiplier,\r\n        lpLabel,\r\n        tokenAddress,\r\n        quoteTokenAddress,\r\n        cakePrice,\r\n        originalValue: farm.apr,\r\n      },\r\n      farm: {\r\n        label: lpLabel,\r\n        pid: farm.pid,\r\n        token: farm.token,\r\n        quoteToken: farm.quoteToken,\r\n      },\r\n      earned: {\r\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\r\n        pid: farm.pid,\r\n      },\r\n      liquidity: {\r\n        liquidity: farm.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: farm.multiplier,\r\n      },\r\n      details: farm,\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    if (viewMode === ViewMode.TABLE && rowData.length) {\r\n      const columnSchema = DesktopColumnSchema\r\n\r\n      const columns = columnSchema.map((column) => ({\r\n        id: column.id,\r\n        name: column.name,\r\n        label: column.label,\r\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\r\n          switch (column.name) {\r\n            case 'farm':\r\n              return b.id - a.id\r\n            case 'apr':\r\n              if (a.original.apr.value && b.original.apr.value) {\r\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\r\n              }\r\n\r\n              return 0\r\n            case 'earned':\r\n              return a.original.earned.earnings - b.original.earned.earnings\r\n            default:\r\n              return 1\r\n          }\r\n        },\r\n        sortable: column.sortable,\r\n      }))\r\n\r\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\r\n    }\r\n\r\n    return (\r\n      <FlexLayout>\r\n        <Route exact path={`${path}`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n              cakePrice={cakePrice}\r\n              account={account}\r\n              removed={false}\r\n            />\r\n          ))}\r\n        </Route>\r\n        <Route exact path={`${path}/history`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n              cakePrice={cakePrice}\r\n              account={account}\r\n              removed\r\n            />\r\n          ))}\r\n        </Route>\r\n        <Route exact path={`${path}/archived`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n              cakePrice={cakePrice}\r\n              account={account}\r\n              removed\r\n            />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    )\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: 24 }} />\r\n      <PageHeader>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"white\" mb=\"24px\">\r\n          {t('Farms')}\r\n        </Heading>\r\n        <Heading scale=\"lg\" color=\"text\">\r\n          {t('Stake LP tokens to earn.')}\r\n        </Heading>\r\n      </PageHeader>\r\n      <Page>\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n            <ToggleWrapper>\r\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\r\n              <Text> {t('Staked only')}</Text>\r\n            </ToggleWrapper>\r\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\r\n              <Select\r\n                options={[\r\n                  {\r\n                    label: t('Hot'),\r\n                    value: 'hot',\r\n                  },\r\n                  {\r\n                    label: t('APR'),\r\n                    value: 'apr',\r\n                  },\r\n                  {\r\n                    label: t('Multiplier'),\r\n                    value: 'multiplier',\r\n                  },\r\n                  {\r\n                    label: t('Earned'),\r\n                    value: 'earned',\r\n                  },\r\n                  {\r\n                    label: t('Liquidity'),\r\n                    value: 'liquidity',\r\n                  },\r\n                ]}\r\n                onChange={handleSortOptionChange}\r\n              />\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\r\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        {account && !userDataLoaded && stakedOnly && (\r\n          <Flex justifyContent=\"center\">\r\n            <Loading />\r\n          </Flex>\r\n        )}\r\n        <div ref={loadMoreRef} />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"],"sourceRoot":""}