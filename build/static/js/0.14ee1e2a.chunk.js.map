{"version":3,"sources":["components/Balance.tsx","components/Layout/Container.tsx","utils/calls/farms.ts","components/PageHeader/PageHeader.tsx","components/Tags.tsx","components/TokenImage/index.tsx","config/constants/meta.ts","components/Layout/Page.tsx","components/ApyCalculatorModal/index.tsx","components/Layout/Flex.tsx","utils/latinise.ts","components/Loading.tsx","hooks/useDelayedUnmount.ts","components/SearchInput/SearchInput.tsx"],"names":["Balance","value","color","decimals","isDisabled","unit","prefix","onClick","props","previousValue","useRef","useEffect","current","start","end","suffix","duration","separator","Container","children","px","mx","maxWidth","options","gasLimit","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","pid","amount","a","BigNumber","times","DEFAULT_TOKEN_DECIMAL","toString","enterStaking","tx","wait","receipt","status","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","Outer","styled","Box","theme","mediaQueries","sm","lg","Inner","PageHeader","background","CoreTag","t","useTranslation","variant","outline","startIcon","width","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","getImageUrlFromToken","token","address","getAddress","symbol","tokens","wbnb","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","DEFAULT_META","title","description","image","StyledPage","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","gt","toNumber","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","pageMeta","path","getCustomMeta","pageTitle","join","property","content","Page","Grid","div","GridItem","GridHeaderItem","BulletList","ul","colors","textSubtle","ApyCalculatorModal","onDismiss","tokenPrice","apr","displayApr","linkLabel","linkHref","earningTokenSymbol","roundingDecimals","compoundFrequency","performanceFee","isFarm","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","mb","justifyContent","small","toFixed","fontSize","bold","textTransform","textAlign","ml","num","getRoi","amountEarned","amountInvested","style","p","display","freq","mt","fee","href","FlexLayout","Latinise","latin_map","τ","Τ","latinise","input","replace","x","Loading","useDelayedUnmount","isMounted","delayTime","useState","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","StyledInput","Input","InputWrapper","SearchInput","onChangeCallback","onChange","placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","useMemo","debounce","e","target","onBlur"],"mappings":"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","file":"static/js/0.14ee1e2a.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text, TextProps } from '@sphynxswap/uikit'\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value: number\r\n  decimals?: number\r\n  unit?: string\r\n  isDisabled?: boolean\r\n  prefix?: string\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({\r\n  value,\r\n  color = 'text',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit,\r\n  prefix,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\r\n      <CountUp\r\n        start={previousValue.current}\r\n        end={value}\r\n        prefix={prefix}\r\n        suffix={unit}\r\n        decimals={decimals}\r\n        duration={1}\r\n        separator=\",\"\r\n      />\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@sphynxswap/uikit'\r\n\r\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\r\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nexport default Container\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.enterStaking(value, options)\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, value, options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking(value, options)\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value, options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  if (pid === 0) {\r\n    const tx = await await masterChefContract.leaveStaking('0', options)\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, '0', options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box } from '@sphynxswap/uikit'\r\nimport Container from '../Layout/Container'\r\n\r\nconst Outer = styled(Box)<{ background?: string }>`\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 16px;\r\n    padding-bottom: 16px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n`\r\n\r\nconst Inner = styled(Container)``\r\n\r\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\r\n  <Outer background={background} {...props}>\r\n    <Inner>{children}</Inner>\r\n  </Outer>\r\n)\r\n\r\nexport default PageHeader\r\n","import React from 'react'\r\nimport {\r\n  Tag,\r\n  VerifiedIcon,\r\n  CommunityIcon,\r\n  RefreshIcon,\r\n  AutoRenewIcon,\r\n  TagProps,\r\n  TimerIcon,\r\n  BlockIcon,\r\n  VoteIcon,\r\n} from '@sphynxswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst CoreTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Core')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CommunityTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\r\n      {t('Community')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst DualTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textSubtle\" outline {...props}>\r\n      {t('Dual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Manual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Auto')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst VoteNowTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Vote Now')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst SoonTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Soon')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ClosedTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\r\n      {t('Closed')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\r\n","import React from 'react'\r\nimport {\r\n  TokenPairImage as UIKitTokenPairImage,\r\n  TokenPairImageProps as UIKitTokenPairImageProps,\r\n  TokenImage as UIKitTokenImage,\r\n  ImageProps,\r\n} from '@sphynxswap/uikit'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Token } from 'config/constants/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\r\n  primaryToken: Token\r\n  secondaryToken: Token\r\n}\r\n\r\nconst getImageUrlFromToken = (token: Token) => {\r\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\r\n  return `/images/tokens/${address}.svg`\r\n}\r\n\r\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\r\n  return (\r\n    <UIKitTokenPairImage\r\n      primarySrc={getImageUrlFromToken(primaryToken)}\r\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\ninterface TokenImageProps extends ImageProps {\r\n  token: Token\r\n}\r\n\r\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\r\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\r\n}\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { PageMeta } from './types'\r\n\r\nexport const DEFAULT_META: PageMeta = {\r\n  title: 'Sphynx',\r\n  description: '',\r\n  image: '',\r\n}\r\n\r\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\r\n  switch (path) {\r\n    case '/':\r\n      return {\r\n        title: `${t('Home')} | ${t('Sphynx Token')}`,\r\n      }\r\n    case '/competition':\r\n      return {\r\n        title: `${t('Trading Battle')} | ${t('Sphynx Token')}`,\r\n      }\r\n    case '/prediction':\r\n      return {\r\n        title: `${t('Prediction')} | ${t('Sphynx Token')}`,\r\n      }\r\n    case '/farms':\r\n      return {\r\n        title: `${t('Farms')} | ${t('Sphynx Token')}`,\r\n      }\r\n    case '/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Sphynx Token')}`,\r\n      }\r\n    case '/lottery':\r\n      return {\r\n        title: `${t('Lottery')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/collectibles':\r\n      return {\r\n        title: `${t('Collectibles')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/ifo':\r\n      return {\r\n        title: `${t('Initial Farm Offering')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/teams':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/profile/tasks':\r\n      return {\r\n        title: `${t('Task Center')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/profile':\r\n      return {\r\n        title: `${t('Your Profile')} | ${t('PancakeSwap')}`,\r\n      }\r\n    default:\r\n      return null\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useLocation } from 'react-router'\r\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport Container from './Container'\r\n\r\nconst StyledPage = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nconst PageMeta = () => {\r\n  const { t } = useTranslation()\r\n  const { pathname } = useLocation()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\r\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\r\n        minimumFractionDigits: 3,\r\n        maximumFractionDigits: 3,\r\n      })}`\r\n    : ''\r\n\r\n  const pageMeta = getCustomMeta(pathname, t) || {}\r\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\r\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{pageTitle}</title>\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledPage {...props}>{children}</StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, LinkExternal, Flex, Box } from '@sphynxswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  tokenPrice: number\r\n  apr: number\r\n  displayApr?: string\r\n  linkLabel: string\r\n  linkHref: string\r\n  earningTokenSymbol?: string\r\n  roundingDecimals?: number\r\n  compoundFrequency?: number\r\n  performanceFee?: number\r\n  isFarm?: boolean\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, auto);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst GridItem = styled.div``\r\n\r\nconst GridHeaderItem = styled.div`\r\n  max-width: 180px;\r\n`\r\n\r\nconst BulletList = styled.ul`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  li::before {\r\n    content: '•';\r\n    margin-right: 4px;\r\n  }\r\n\r\n  li::marker {\r\n    font-size: 12px;\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  tokenPrice,\r\n  apr,\r\n  displayApr,\r\n  linkLabel,\r\n  linkHref,\r\n  earningTokenSymbol = 'CAKE',\r\n  roundingDecimals = 2,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n  isFarm = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\r\n\r\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 1,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 7,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 30,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 365,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n\r\n  return (\r\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\r\n      {isFarm && (\r\n        <Box>\r\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n            <Text small color=\"textSubtle\">\r\n              {t('APR (incl. LP rewards)')}\r\n            </Text>\r\n            <Text small>{displayApr}%</Text>\r\n          </Flex>\r\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\r\n            <Text small color=\"textSubtle\">\r\n              {t('Base APR (yield only)')}\r\n            </Text>\r\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\r\n          </Flex>\r\n        </Box>\r\n      )}\r\n      <Grid>\r\n        <GridHeaderItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\r\n            {t('Timeframe')}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        <GridHeaderItem>\r\n          <Text\r\n            textAlign=\"right\"\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mr=\"12px\"\r\n            ml=\"12px\"\r\n            mb=\"12px\"\r\n          >\r\n            {t('ROI')}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        <GridHeaderItem>\r\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\r\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 1 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\r\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\r\n              roundingDecimals,\r\n            )}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 7 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\r\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\r\n              roundingDecimals,\r\n            )}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 30 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\r\n            {getRoi({\r\n              amountEarned: tokenEarnedPerThousand30D,\r\n              amountInvested: oneThousandDollarsWorthOfToken,\r\n            }).toFixed(roundingDecimals)}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ maxWidth: '180px' }}>\r\n          <Text>{t('365d (APY)')}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\r\n            {getRoi({\r\n              amountEarned: tokenEarnedPerThousand365D,\r\n              amountInvested: oneThousandDollarsWorthOfToken,\r\n            }).toFixed(roundingDecimals)}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Flex justifyContent=\"center\">\r\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\r\n          <BulletList>\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t('Calculated based on current rates.')}\r\n              </Text>\r\n            </li>\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\r\n              </Text>\r\n            </li>\r\n            {isFarm && (\r\n              <li>\r\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\r\n                </Text>\r\n              </li>\r\n            )}\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t(\r\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n                )}\r\n              </Text>\r\n            </li>\r\n            {performanceFee > 0 && (\r\n              <li>\r\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\r\n                    fee: performanceFee,\r\n                  })}\r\n                </Text>\r\n              </li>\r\n            )}\r\n          </BulletList>\r\n        </Box>\r\n      </Flex>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","export const Latinise = {\r\n  latin_map: {\r\n    τ: 't',\r\n    Τ: 'T',\r\n  },\r\n}\r\n\r\nexport const latinise = (input: string) => {\r\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Loading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import { useState, useEffect } from 'react'\r\n\r\n/**\r\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\r\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\r\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\r\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\r\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\r\n * This hook \"shows\" element immediately when the isMounted is true\r\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\r\n * delayTime should be the same as animation time in most cases.\r\n */\r\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\r\n  const [shouldRender, setShouldRender] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let timeoutId: ReturnType<typeof setTimeout>\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true)\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\r\n    }\r\n    return () => clearTimeout(timeoutId)\r\n  }, [isMounted, delayTime, shouldRender])\r\n  return shouldRender\r\n}\r\n\r\nexport default useDelayedUnmount\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Input } from '@sphynxswap/uikit'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ toggled: boolean }>``\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\r\n  const [toggled, setToggled] = useState(false)\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <Container toggled={toggled}>\r\n      <InputWrapper>\r\n        <StyledInput\r\n          value={searchText}\r\n          onChange={onChange}\r\n          placeholder={t(placeholder)}\r\n          onBlur={() => setToggled(false)}\r\n        />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n"],"sourceRoot":""}